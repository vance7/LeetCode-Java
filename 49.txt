public class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> result = new LinkedList<>();
        if(strs == null||strs.length == 0)
            return result;
        HashMap<String, List<String>> hm = new HashMap<>();
        for(String str : strs){
            if(!hm.containsKey(helper(str))){
                List<String> list = new LinkedList<>();
                list.add(str);
                hm.put(helper(str),list);
            }else{
                hm.get(helper(str)).add(str);
            }
        }
        for(String key : hm.keySet())
            result.add(hm.get(key));
        return result;
    }
    public String helper(String a){
        int [] array = new int[26];
        StringBuilder sb = new StringBuilder("");
        for(char i:a.toCharArray()){
            array[i-'a']++;
        }
        for(int i = 0; i< 26; i++){
            if(array[i]!=0){
                sb.append(Integer.toString(array[i]));
                sb.append((char)(i+97));
            }
        }
        return sb.toString();
    }
}