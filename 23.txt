/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        return partion(lists,0,lists.length-1);
    }
    public ListNode partion(ListNode[] lists, int s, int e){
        if(s==e) return lists[s];
        if(s<e){
            int mid = (s+e)/2;
            ListNode l1 = partion(lists,s,mid);
            ListNode l2 = partion(lists,mid+1,e);
            return mergeTwoLists(l1,l2);
        }else
            return null;
    }
    public ListNode mergeTwoLists(ListNode l1, ListNode l2){
        if(l1==null)    return l2;
        if(l2==null)    return l1;
        if(l1.val<l2.val){
            l1.next = mergeTwoLists(l1.next,l2);
            return l1;
        }else{
            l2.next = mergeTwoLists(l1,l2.next);
            return l2;
        }
    }
}