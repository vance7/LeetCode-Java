public class Solution {
    public String frequencySort(String s) {
        if(s==null)
            return s;
        Map <Character, Integer> hm = new HashMap<>();
        char[] charArray = s.toCharArray();
        int max = 0;
        for(char c: charArray){
            if(!hm.containsKey(c))
                hm.put(c,1);
            else
                hm.put(c,hm.get(c)+1);
            max = Math.max(max,hm.get(c));
        }
        
        List<Character> [] array = buildArray(hm,max);
        return buildString(array);
    }
    
    private List<Character>[] buildArray(Map <Character, Integer> hm, int max){
        List<Character>[] array = new List [max+1];
        for(Character c : hm.keySet()){
            int index = hm.get(c);
            if(array[index] == null)
                array[index] = new LinkedList<>();
            array[index].add(c);
        }
        return array;
    }
    
    private String buildString(List<Character> [] array){
        StringBuilder sb = new StringBuilder("");
        for(int i = array.length - 1; i>=0; i--){
            List<Character> list = array[i];
            if(list!=null){
                for(Character c : list){
                    for(int j = 0; j < i; j++)
                        sb.append(c);
                }
            }
        }
        return sb.toString();
    }
}