/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new LinkedList<>();
        if(root == null)
            return result;
        StringBuilder sb = new StringBuilder();
        addPath(root, result, sb);
        return result;
    }
    public void addPath(TreeNode root, List<String> result, StringBuilder sb){
        if(root == null)
            return;
        int tempLength = sb.length();
        if(root.left == null && root.right == null){
            sb.append(root.val);
            result.add(sb.toString());
            sb.delete(tempLength,sb.length());
            return;
        }
        sb.append(root.val+"->");
        addPath(root.left,result,sb);
        addPath(root.right,result,sb);
        sb.delete(tempLength,sb.length());
        return;
    }
}