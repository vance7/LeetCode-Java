public class Solution {
    private int m;
    private int n;
    public int numIslands(char[][] grid) {
        m = grid.length;
        if(m == 0)
            return 0;
        n = grid[0].length;
        if(n == 0)
            return 0;
        int count = 0;
        for(int i = 0; i < m ; i ++){
            for(int j = 0; j < n ; j ++){
                if(grid[i][j] == '1'){
                    DFSisland(grid, i , j);
                    ++count;
                }
            }
        }
        return count;
    }
    
    public void DFSisland(char [][] grid, int i , int j){
        if(i<0||i>=m||j<0||j>=n||grid[i][j]!='1')return;
        grid[i][j]=0;
        DFSisland(grid,i-1,j);
        DFSisland(grid,i+1,j);
        DFSisland(grid,i,j-1);
        DFSisland(grid,i,j+1);
    }
}