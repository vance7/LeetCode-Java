/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return helper(postorder.length-1,0,inorder.length-1,inorder,postorder);   
    }
    public TreeNode helper(int postStart, int inStart, int inEnd, int[] inorder, int [] postorder){
        if(postStart<0||inStart>inEnd)
            return null;
        TreeNode root = new TreeNode(postorder[postStart]);
        int index = 0;
        for(int i = 0; i < inorder.length; i++){
            if(inorder[i] == postorder[postStart]){
                index = i;
                break;
            }
        }
        root.right = helper(postStart-1, index+1,inEnd,inorder,postorder);
        root.left = helper(postStart-inEnd+index-1, inStart, index-1,inorder,postorder );
        return root;
    }
}