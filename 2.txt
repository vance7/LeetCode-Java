public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head1 = l1;
        ListNode head2 = l2;
        ListNode dummy = new ListNode(0);
        ListNode head = dummy;
        int carry = 0;
        while (head1 != null || head2 != null || carry != 0){
            int val = carry;
            if (head1 != null){
                val += head1.val;
                head1 = head1.next;
            }
            if (head2 != null){
                val += head2.val;
                head2 = head2.next;
            }
            ListNode tmp = new ListNode(val%10);
            carry = val/10;
            head.next = tmp;
            head = head.next;
        }
        return dummy.next;
    }
}

or
(self)

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null)
            return l2;
        if(l2 == null)
            return l1;
        ListNode head = new ListNode(-1);
        ListNode current = head;
        int index = 0;
        while(l1!=null&&l2!=null){
            if(index+l1.val+l2.val<10){
                current.next = new ListNode(index+l1.val+l2.val);
                current = current.next;
                index = 0;
                l1 = l1.next;
                l2 = l2.next;
            }
            else{
                current.next = new ListNode((index+l1.val+l2.val)%10);
                current = current.next;
                index = 1;
                l1 = l1.next;
                l2 = l2.next;
            }
        }
        if(l1==null&&l2==null){
            if(index == 1)
                current.next = new ListNode(1);
        }
        if(l1!=null){
            while(l1!=null){
                if(index + l1.val < 10){
                    current.next = new ListNode(index+l1.val);
                    current = current.next;
                    l1 = l1.next;
                    index = 0;
                }
                else{
                    current.next = new ListNode(0);
                    current = current.next;
                    l1 = l1.next;
                    index = 1;
                }
            }
            if(index == 1)
                current.next = new ListNode(1);
        }
        if(l2!=null){
            while(l2!=null){
                if(index + l2.val < 10){
                    current.next = new ListNode(index+l2.val);
                    current = current.next;
                    l2 = l2.next;
                    index = 0;
                }
                else{
                    current.next = new ListNode(0);
                    current = current.next;
                    l2 = l2.next;
                    index = 1;
                }
            }
            if(index == 1)
                current.next = new ListNode(1);
        }
        return head.next;
    }
}